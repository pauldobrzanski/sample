# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
  branches:
    include:
      - "*"
      
pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: build_application
    displayName: "Build Application"
    
    steps:
      - script: dotnet publish "$(Build.SourcesDirectory)/src/Sample/Sample.csproj" --output "$(Build.SourcesDirectory)/src/Sample/dist" --configuration Release
        displayName: "Build release"

      - task: ArchiveFiles@2
        displayName: "Zip release"
        inputs:
          rootFolderOrFile: "$(Build.SourcesDirectory)/src/Sample/dist"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/sample-app.zip"
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        displayName: "Publish zip"
        inputs:
          pathToPublish: "$(Build.ArtifactStagingDirectory)/sample-app.zip"
          artifactName: sample-app

  - job: sonarcloud_analysis
    displayName: "SonarCloud Analysis"

    steps:
      - task: SonarCloudPrepare@1
        displayName: "Prepare application"
        inputs:
          SonarCloud: "sonarcloud"
          organization: "pauldobrzanski"
          scannerMode: "MSBuild"
          projectKey: "pauldobrzanski-sample"

      - task: DotNetCoreCLI@2
        displayName: "Build application"
        inputs:
          command: build
          projects: "$(Build.SourcesDirectory)/src/Sample/Sample.csproj"

      - task: SonarCloudAnalyze@1
        displayName: "Analyze application"

      - task: SonarCloudPublish@1
        displayName: "Publish results"
        inputs:
          pollingTimeoutSec: "300"
